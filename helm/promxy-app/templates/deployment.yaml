apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource.default.name" . }}
  namespace: {{ include "resource.default.namespace" . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        releaseRevision: {{ .Release.Revision | quote }}
      labels:
        {{- include "labels.common" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "resource.default.name"  . }}
      securityContext:
        runAsUser: {{ .Values.pod.user.id }}
        runAsGroup: {{ .Values.pod.group.id }}
        runAsNonRoot: true
        {{- with .Values.podSecurityContext }}
          {{- . | toYaml | nindent 8 }}
        {{- end }}
      containers:
      - name: {{ include "name" . }}
        image: "{{ .Values.registry.domain }}/{{ .Values.promxy.image.name }}:{{ .Values.promxy.image.tag }}"
        args:
        - "--bind-addr=:{{ .Values.promxy.port }}"
        - "--config={{ .Values.promxy.mountPath }}/config.yaml"
        - "--log-level=debug"
        - "--web.enable-lifecycle"
        command:
        - "/bin/promxy"
        ports:
        - containerPort: {{ .Values.promxy.port }}
          name: web
          protocol: TCP
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /-/healthy
            port: web
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /-/ready
            port: web
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        {{- with .Values.promxy.resources }}
        securityContext:
          {{- with .Values.securityContext }}
            {{- . | toYaml | nindent 10 }}
          {{- end }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: "{{ .Values.promxy.mountPath }}"
          name: promxy-config
          readOnly: true
      # container to reload configs on configmap change
      - name: promxy-server-configmap-reload
        args:
        - "--volume-dir={{ .Values.promxy.mountPath }}"
        - "--webhook-url=http://localhost:{{ .Values.promxy.port }}/-/reload"
        image: "{{ .Values.registry.domain }}/{{ .Values.promxy.configmapReloadImage.name }}:{{ .Values.promxy.configmapReloadImage.tag }}"
        {{- with .Values.promxy.configmapReloadResources }}
        securityContext:
          {{- with .Values.securityContext }}
            {{- . | toYaml | nindent 10 }}
          {{- end }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: "{{ .Values.promxy.mountPath }}"
          name: promxy-config
          readOnly: true
      imagePullSecrets:
      - name: {{ include "resource.pullSecret.name" . }}
      volumes:
      - name: promxy-config
        configMap:
          name: {{ include "resource.default.name" . }}
